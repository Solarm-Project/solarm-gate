name "solarm-sysroot"
version "0.5.11"
branch "2023.0.0"
publisher "solarm.org"

transform include="actuators"
transform include="docs"
transform include="devel"
transform include="locale"
transform include="autopyc"
//transform include="python"
transform include="defaults"
//transform include="libtool-drop"
//transform include="archive-libraries-drop"
//transform include="ignore-gcc-usr-lib"
transform "<transform file dir link hardlink path=opt/solarm/share/info/dir -> drop>"

// Drop the sysroot since we are using Braich at the moment as sysroot and not need custom packages
transform "<transform file path=opt/solarm/sysroot/.* -> drop>"

// pkgdepend seems to have problems while checking cross compile dependencies
transform "<transform file path=opt/solarm/aarch64.* -> add pkg.depend.bypass-generate .*>"

transform "<transform dir -> drop>"

package {
	name "developer/solarm/cross/arm/gnu-binutils"
	project-name "gnu-binutils"
	version "2.39"
	prefix "/opt/solarm"
	build {
		configure {
			option "with-sysroot"
			option "target=aarch64-unknown-solaris2.11"
			option "enable-initfini-array"
		}
	}
}

// This also build the linker which is mandatory for our GCC
package {
	name "developer/solarm/cross/arm/sysroot"
}


package {
	name "developer/solarm/cross/arm/gcc"
	version "10.3.0"
	prefix "/opt/solarm"
	build {
		configure {
			option "target=aarch64-unknown-solaris2.11"
			option "with-sysroot=/opt/solarm/sysroot"
			option "with-as=/opt/solarm/bin/aarch64-unknown-solaris2.11-as"
			option "with-ld=/opt/solarm/bin/amd64/ld"
			option "enable-languages=c,c++"
			flag "-g -O2 -mno-outline-atomics -mtls-dialect=trad" name="CFLAGS_FOR_TARGET"		
			flag "-g -O2 -mno-outline-atomics -mtls-dialect=trad" name="CXXFLAGS_FOR_TARGET"
		}
	}
	dependency "developer/solarm/cross/arm/gnu-binutils"
	dependency "developer/solarm/cross/arm/sysroot"
}


package {
	name "developer/solarm/cross/arm/zlib"

	build {
		script "build_and_install.sh"
	}
}

package {
	name "developer/solarm/cross/arm/libxml2"
	prefix "/opt/solarm/sysroot/usr"

	build {
		configure {
			compiler "/opt/solarm/bin/aarch64-unknown-solaris2.11-gcc"
			flag "--sysroot=/opt/solarm/sysroot"
			option "host=aarch64-unknown-solaris2.11"
			option "without-zlib" //TODO Check why we did not build with zlib
		}
	}
}

package {
	name "developer/solarm/cross/arm/openssl"
	prefix "/opt/solarm/sysroot/usr"

	build {
		script "build_and_install.sh"
	}
}

package {
	name "developer/solarm/cross/arm/idnkit"
	prefix "/opt/solarm/sysroot/usr"

	build {
		configure {
			option "host=aarch64-unknown-solaris2.11"
			option "with-sysroot=/opt/solarm/sysroot"
			compiler "/opt/solarm/bin/aarch64-unknown-solaris2.11-gcc"
		}
	}
}

package {
	name "developer/solarm/cross/arm/nspr"
	prefix "/opt/solarm/sysroot/usr"
	build {
		configure {
			option "build=i386-pc-solaris2.11"
			option "target=aarch64-unknown-solaris2.11"
			option "libdir=/opt/solarm/sysroot/usr/lib/mps"
			option "bindir=/opt/solarm/sysroot/usr/bin"
			option "includedir=/opt/solarm/sysroot/usr/include/mps"
			compiler "/opt/solarm/bin/aarch64-unknown-solaris2.11-gcc"
			flag "--sysroot=/opt/solarm/sysroot"
		}
	}
}

package {
	name "developer/solarm/cross/arm/nss"

	build {
		script "build_and_install.sh"
	}
}

package {
	name "developer/solarm/cross/arm/xorriso"
	prefix "/opt/solarm/sysroot/usr"
	build {
		configure {
			option "build=i386-pc-solaris2.11"
			option "host=aarch64-unknown-solaris2.11"
			compiler "/opt/solarm/bin/aarch64-unknown-solaris2.11-gcc" 
			flag "--sysroot=/opt/solarm/sysroot"
		}
	}
}

